import classNames from 'classnames';
import { addCommonDirectiveOptions, commonDirectiveOptions } from './utils.js';
export const blockquoteDirective = {
    name: 'blockquote',
    alias: ['epigraph', 'pull-quote'],
    doc: 'Block quotes are used to indicate that the enclosed content forms an extended quotation. They may be followed by an inscription or attribution formed of a paragraph beginning with `--`, `---`, or an em-dash.',
    options: {
        ...commonDirectiveOptions('blockquote'),
        // TODO: Add enumeration in future
        class: {
            type: String,
            doc: `CSS classes to add to your blockquote. Special classes include:

- \`pull-quote\`: used for a blockquote node which should attract attention
- \`epigraph\`: used for a blockquote node that are usually found at the beginning of a document`,
        },
    },
    body: {
        type: 'myst',
        doc: 'The body of the quote, which may contain a special attribution paragraph that is turned into a caption',
    },
    run(data) {
        var _a;
        const children = [];
        if (data.body) {
            children.push(...data.body);
        }
        const container = {
            type: 'container',
            kind: 'quote',
            children: [
                {
                    // @ts-expect-error: myst-spec needs updating to support blockquote
                    type: 'blockquote',
                    children: children,
                },
            ],
        };
        addCommonDirectiveOptions(data, container);
        // Override class to include name of container
        const className = (_a = data.options) === null || _a === void 0 ? void 0 : _a.class;
        container.class = classNames({
            [className]: className,
            [data.name]: data.name !== 'blockquote',
        });
        return [container];
    },
};
