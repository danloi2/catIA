export const rawDirective = {
    name: 'raw',
    doc: 'Allows you to include non-markdown text in your document. If the argument "latex" is provided, the text will be parsed as latex; otherwise, it will be included as raw text.',
    arg: {
        type: String,
        doc: 'Format of directive content - for now, only "latex" is valid',
    },
    body: {
        type: String,
        doc: 'Raw content to be parsed',
    },
    run(data) {
        var _a, _b;
        const lang = (_a = data.arg) !== null && _a !== void 0 ? _a : '';
        const value = (_b = data.body) !== null && _b !== void 0 ? _b : '';
        const tex = ['tex', 'latex'].includes(lang) ? `\n${value}\n` : undefined;
        const typst = ['typst', 'typ'].includes(lang) ? `\n${value}\n` : undefined;
        return [
            {
                type: 'raw',
                lang,
                tex,
                typst,
                value,
            },
        ];
    },
};
export const rawLatexDirective = {
    name: 'raw:latex',
    alias: ['raw:tex'],
    doc: 'Allows you to include tex in your document that will only be included in tex exports',
    body: {
        type: String,
        doc: 'Raw tex content',
    },
    run(data) {
        const lang = 'tex';
        const body = data.body;
        const tex = body ? `\n${body}\n` : '';
        return [
            {
                type: 'raw',
                lang,
                tex,
            },
        ];
    },
};
export const rawTypstDirective = {
    name: 'raw:typst',
    alias: ['raw:typ'],
    doc: 'Allows you to include typst in your document that will only be included in typst exports',
    body: {
        type: String,
        doc: 'Raw typst content',
    },
    run(data) {
        const lang = 'typst';
        const body = data.body;
        const typst = body ? `\n${body}\n` : '';
        return [
            {
                type: 'raw',
                lang,
                typst,
            },
        ];
    },
};
