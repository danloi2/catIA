import type { ValidationOptions } from 'simple-validators';
import type { License, Licenses } from './types.js';
/**
 * Validate input to be known license id and return corresponding License object
 */
export declare function validateLicense(input: any, opts: ValidationOptions): License | undefined;
/**
 * Validate Licenses object; coerces string ids into license objects
 *
 * Input value is either a single license id string or an object with
 * license ids for 'code' and/or 'content'
 */
export declare function validateLicenses(input: any, opts: ValidationOptions): Licenses | undefined;
/**
 * Convert license object to either a single string or content/code strings
 *
 * This function only retains license ids, so it may lose other custom fields.
 */
export declare function licensesToString(licenses: Licenses): string | {
    content?: string;
    code?: string;
} | undefined;
/**
 * Simplify license object as much as possible without losing any custom fields
 */
export declare function simplifyLicenses(licenses: Licenses): string | {
    content?: string | License;
    code?: string | License;
};
//# sourceMappingURL=validators.d.ts.map