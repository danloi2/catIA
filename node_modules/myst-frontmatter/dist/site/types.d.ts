import type { Affiliation } from '../affiliations/types.js';
import type { Contributor } from '../contributors/types.js';
import type { Funding } from '../funding/types.js';
import type { Venue } from '../venues/types.js';
export declare const PAGE_KNOWN_PARTS: string[];
export declare const SITE_FRONTMATTER_KEYS: string[];
export declare const FRONTMATTER_ALIASES: {
    author: string;
    reviewer: string;
    editor: string;
    contributor: string;
    affiliation: string;
    export: string;
    download: string;
    jupyter: string;
    part: string;
    ack: string;
    acknowledgements: string;
    acknowledgment: string;
    acknowledgement: string;
    availability: string;
    dataAvailability: string;
    'data-availability': string;
    quote: string;
    plain_language_summary: string;
    'plain-language-summary': string;
    plainLanguageSummary: string;
    lay_summary: string;
    'lay-summary': string;
    keyPoints: string;
    key_points: string;
    'key-points': string;
    image: string;
    identifier: string;
};
export type SiteFrontmatter = {
    title?: string;
    description?: string;
    subtitle?: string;
    short_title?: string;
    thumbnail?: string | null;
    thumbnailOptimized?: string;
    banner?: string | null;
    bannerOptimized?: string;
    authors?: Contributor[];
    tags?: string[];
    /**
     * Reviewers and editors are author/contributor ids.
     * If an object is provided for these fields, it will be moved to contributors
     * and replaced with id reference.
     */
    reviewers?: string[];
    editors?: string[];
    affiliations?: Affiliation[];
    venue?: Venue;
    github?: string;
    keywords?: string[];
    funding?: Funding[];
    copyright?: string;
    contributors?: Contributor[];
    options?: Record<string, any>;
    parts?: Record<string, string[]>;
};
//# sourceMappingURL=types.d.ts.map