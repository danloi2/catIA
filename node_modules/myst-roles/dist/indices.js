import { parseIndexLine, createIndexEntries } from 'myst-common';
const REF_PATTERN = /^(.+?)<([^<>]+)>$/; // e.g. 'index entries <pair: index; entry>'
export const indexRole = {
    name: 'index',
    body: {
        type: String,
        required: true,
    },
    run(data, vfile) {
        const body = data.body;
        const match = REF_PATTERN.exec(body);
        const [, modified, indexString] = match !== null && match !== void 0 ? match : [];
        const values = { single: [], pair: [], triple: [], see: [], seealso: [] };
        parseIndexLine(indexString !== null && indexString !== void 0 ? indexString : body, values, vfile, data.node);
        const entries = createIndexEntries(values, vfile, data.node);
        const output = [
            {
                type: 'mystTarget',
                indexEntries: entries,
            },
            {
                type: 'span',
                children: [
                    {
                        type: 'text',
                        value: modified !== null && modified !== void 0 ? modified : body,
                    },
                ],
            },
        ];
        return output;
    },
};
